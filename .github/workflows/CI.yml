## This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
## For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
#
#name: Java CI with Gradle
#
#on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: "*"
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up JDK 17
#      uses: actions/setup-java@v3
#      with:
#        java-version: '17'
#        distribution: 'adopt'
#    - name: Grant execute permission for gradlew
#      run: chmod +x gradlew
#    - name: Build with Gradle
#      run: ./gradlew build
#
#  test:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#    - name: Checkout repo
#      uses: actions/checkout@v3
#    - name: Set up JDK 17
#      uses: actions/setup-java@v3
#      with:
#        java-version: '17'
#        distribution: 'adopt'
#    - name: Grant execute permission for gradlew
#      run: chmod +x gradlew
#    - name: Build with Gradle (JDK 17)
#      run: ./gradlew test
#
#  coverage:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#    - name: Checkout repo
#      uses: actions/checkout@v3
#    - name: Set up JDK 17
#      uses: actions/setup-java@v3
#      with:
#        java-version: '17'
#        distribution: 'adopt'
#    - name: Grant execute permission for gradlew
#      run: chmod +x gradlew
#    - name: Run Test Coverage
#      run: ./gradlew jacocoTestReport
#    - name: Codecov
#      uses: codecov/codecov-action@v2.1.0
#      with:
#        files: ./build/reports/jacoco/test/jacocoTestReport.xml


# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

#name: Java CI
#
#on: [push]

#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 1
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#      - name: Validate Gradle wrapper
#        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
#      - name: Build with Gradle
#        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
#        with:
#          arguments: -Pclean-release build
#      - name: Test with Gradle
#        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
#        with:
#          arguments: test
#      - name: TestCoverage with Gradle
#        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
#        with:
#          arguments: jacocoTestReport
#      - name: Codecov
#        uses: codecov/codecov-action@v2.1.0
#        with:
#          files: ./build/reports/jacoco/test/jacocoTestReport.xml

# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: build with gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: "*"

env:
  # JDK version used for building jar file
  currentBuildVersion: 8
jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest, macOS-latest, windows-latest]
        # Use both LTS releases and latest one for tests
        jdk: [ 8, 11, 16, 17 ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up OpenJDK version ...
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.jdk }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run:   |
          if [ "$RUNNER_OS" == "Linux" ]; then
                ./gradlew clean build 
          elif [ "$RUNNER_OS" == "macOS" ]; then
                ./gradlew clean build 
          elif [ "$RUNNER_OS" == "Windows" ]; then
                ./gradlew.bat clean build
          else
                echo "$RUNNER_OS not supported"
                exit 1
          fi
        shell: bash
  coverage:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up OpenJDK version ...
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ env.currentBuildVersion }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle (JDK ${{ env.currentBuildVersion }})
        run: ./gradlew clean check jacocoTestReport
      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          files: ./build/reports/jacoco/test/jacocoTestReport.xml 